import abc
from typing import *
from pathlib import Path
from abc import ABC, abstractmethod

# current_page
JsonDict = NewType('JsonDict', Dict[str, List[Any]])
# current_page_illusts = current_page['illusts']
JsonDictPage = NewType('JsonDictPage', List[Dict[str, Any]])
# post_json = current_page_illusts[i]
PostJson = NewType('PostJson', Dict[str, Any])
# all_pages_cache = {str page_num: JsonDict current_page}
Cache = NewType('Cache', Dict[str, JsonDict])


KONEKODIR: Path

class LastPageException(ValueError): ...

class AbstractGallery(ABC, metaclass=abc.ABCMeta):
    def __init__(self, current_page_illusts: JsonDictPage, current_page: JsonDict, current_page_num: int, all_pages_cache: Cache) -> None: ...
    def open_link_coords(self, first_num: str, second_num: str) -> None: ...
    def open_link_num(self, number: int) -> None: ...
    def download_image_coords(self, first_num: str, second_num: str) -> None: ...
    def download_image_num(self, number: int) -> None: ...
    def view_image(self, selected_image_num: int) -> None: ...
    def next_page(self) -> None: ...
    def previous_page(self) -> None: ...
    def reload(self) -> None: ...
    @abstractmethod
    def handle_prompt(self, keyseqs: List[str], gallery_command: str, selected_image_num: Optional[int], first_num: Optional[str], second_num: Optional[str]) -> None: ...
    @staticmethod
    @abstractmethod
    def help() -> None: ...

class ArtistGallery(AbstractGallery):
    def __init__(self, current_page_illusts: JsonDictPage, current_page: JsonDict, current_page_num: int, artist_user_id: int, all_pages_cache: Cache, **kwargs: Any) -> None: ...
    def handle_prompt(self, keyseqs: List[str], gallery_command: str, selected_image_num: Optional[int], first_num: Optional[str], second_num: Optional[str]) -> None: ...
    @staticmethod
    def help() -> None: ...

class IllustFollowGallery(AbstractGallery):
    def __init__(self, current_page_illusts: JsonDictPage, current_page: JsonDict, current_page_num: int, all_pages_cache: Cache) -> None: ...
    def go_artist_gallery_coords(self, first_num: Any, second_num: Any) -> None: ...
    def go_artist_gallery_num(self, selected_image_num: Any) -> None: ...
    def handle_prompt(self, keyseqs: List[str], gallery_command: str, selected_image_num: Optional[int], first_num: Optional[str], second_num: Optional[str]) -> None: ...
    @staticmethod
    def help() -> None: ...

def display_image(post_json: PostJson, artist_user_id: int, number_prefix: int, current_page_num: int) -> None: ...

class Image:
    def __init__(self, image_id: int, artist_user_id: int, current_page_num: int, firstmode: bool, **kwargs: Any) -> None: ...
    def open_image(self) -> None: ...
    def download_image(self) -> None: ...
    def next_image(self) -> None: ...
    def previous_image(self) -> None: ...
    def leave(self, force: bool) -> None: ...

class Users(ABC, metaclass=abc.ABCMeta):
    @abstractmethod
    def __init__(self, user_or_id: str) -> None: ...
    def start(self) -> None: ...
    def next_page(self) -> None: ...
    def previous_page(self) -> None: ...
    def go_artist_mode(self, selected_user_num: int) -> None: ...
    def reload(self) -> None: ...

class SearchUsers(Users):
    def __init__(self, user: str) -> None: ...

class FollowingUsers(Users):
    def __init__(self, your_id: int, publicity: str) -> None: ...
