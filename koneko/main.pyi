import abc
from typing import *
from pathlib import Path
from abc import ABC, abstractmethod

# current_page
JsonDict = NewType('JsonDict', Dict[str, List[Any]])
# current_page_illusts = current_page['illusts']
JsonDictPage = NewType('JsonDictPage', List[Dict[str, Any]])
# post_json = current_page_illusts[i]
PostJson = NewType('PostJson', Dict[str, Any])
# all_pages_cache = {str page_num: JsonDict current_page}
Cache = NewType('Cache', Dict[str, JsonDict])


KONEKODIR: Path

def main() -> None: ...
def main_loop(prompted: bool, main_command: Optional[str], user_input: Optional[str], your_id: Optional[str]) -> None: ...

class Loop(ABC, metaclass=abc.ABCMeta):
    def __init__(self, prompted: bool, user_input: str) -> None: ...
    def start(self, start: bool) -> None: ...

class ArtistModeLoop(Loop): ...
class ViewPostModeLoop(Loop): ...
class SearchUsersModeLoop(Loop): ...
class FollowingUserModeLoop(Loop): ...

class IllustFollowModeLoop(Loop):
    def start(self, start: bool) -> None: ...

class GalleryLikeMode(ABC, metaclass=abc.ABCMeta):
    gallery: GalleryLikeMode
    def __init__(self, current_page_num: int, all_pages_cache: Optional[Cache]) -> None: ...
    def start(self) -> None: ...

class ArtistGalleryMode(GalleryLikeMode):
    def __init__(self, artist_user_id: int, current_page_num: int, **kwargs: Any) -> None: ...

class IllustFollowMode(GalleryLikeMode):
    def __init__(self, current_page_num: int, all_pages_cache: Optional[Cache]) -> None: ...

def view_post_mode(image_id: int) -> None: ...
